@using StudentMangmentBLL.Interfaces

@model StudentViewModel
@{
    ViewData["Title"] = "Create";
}

@* @inject IGenericRepository<Subject> SubjectRepo 
@{
    var subjects = new List<Subject>(SubjectRepo.GetAllStudent());
} *@

<h1>Create New Student</h1>

<br />

<form asp-action="Create">
    <div class="mb-3">
        <label class="form-label" asp-for="Name"></label>
        <input type="text" class="form-control" id="exampleInputPassword1" asp-for="Name">
        <span asp-validation-for="Name" class=" alert-danger mt-1"></span>
    </div>

    <div class="mb-3">
        <label class="form-label" asp-for="DateOfBirth"></label>
        <input type="date"  class="form-control" asp-for="DateOfBirth" />
        <span asp-validation-for="DateOfBirth" class="alert-danger mt-1"></span>
    </div>

    <div class="mb-3">
        <label class="form-label" asp-for="Address"></label>
        <input type="text" class="form-control" id="exampleInputPassword1" asp-for="Address">
        <span asp-validation-for="Address" class=" alert-danger mt-1"></span>
    </div>


    
 
    <div class="d-flex justify-content-evenly flex-wrap gap-3 mb-3">

        @for (int i = 0; i < Model.subjects.Count; i++)
        {
            <div class="border border-2 p-3 pointer @(Model.subjects[i].IsSlected ? "bg-mystyle" : "")" onclick="MakeCheckd(this)">

                <input type="hidden" asp-for="@Model.subjects[i].Name" />

                <input type="hidden" asp-for="@Model.subjects[i].id" />

                <input  class="pointer d-none" type="checkbox" asp-for="@Model.subjects[i].IsSlected" />
                <label class="pointer">@Model.subjects[i].Name</label>

            </div>
        }

    </div>


    @if (Model.Id == null)
    {
        <button class="btn btn-primary rounded rounded-0">Create Student</button>
    }
    else
    {
        <button class="btn btn-secondary rounded rounded-0">Update Student</button>
    }
</form>
@section Scripts {
    <partial name="_ValidationScriptsPartial.cshtml">
        <script>
            function MakeCheckd(ele){
                console.log(ele)
                var checkbox = ele.querySelector('input[type="checkbox"]');
                // If checkbox is found, set its checked property to true
               if (checkbox) {
            checkbox.checked = !checkbox.checked;
                    ele.classList.toggle('bg-mystyle', checkbox.checked);

        }
            }
        </script>
}
